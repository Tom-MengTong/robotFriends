{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants.js';\nconst initialStateSearch = {\n  searchField: ''\n};\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        searchField: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nconst initialStateRobots = {};\nexport const requestRobots = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/tom/Courses/Web Developer 2.0/robotFriends/src/reducers.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchField","searchRobots","state","action","type","Object","assign","payload","initialStateRobots","requestRobots","initialState","isPending","robots","error"],"mappings":"AAAA,SACCA,mBADD,EAECC,sBAFD,EAGCC,sBAHD,EAICC,qBAJD,QAKO,gBALP;AAOA,MAAMC,kBAAkB,GAAG;AAC1BC,EAAAA,WAAW,EAAE;AADa,CAA3B;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,kBAAT,EAA6BI,MAAM,GAAC,EAApC,KAA2C;AACtE,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKT,mBAAL;AACC,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACF,QAAAA,WAAW,EAAEG,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACD;AACC,aAAOL,KAAP;AAJF;AAMA,CAPM;AASP,MAAMM,kBAAkB,GAAG,EAA3B;AAIA,OAAO,MAAMC,aAAa,GAAG,CAACP,KAAK,GAAGQ,YAAT,EAAuBP,MAAM,GAAC,EAA9B,KAAqC;AACjE,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKR,sBAAL;AACC,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAES,QAAAA,SAAS,EAAE;AAAb,OAAzB,CAAP;;AACD,SAAKd,sBAAL;AACC,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEU,QAAAA,MAAM,EAAET,MAAM,CAACI,OAAjB;AAA0BI,QAAAA,SAAS,EAAE;AAArC,OAAzB,CAAP;;AACD,SAAKb,qBAAL;AACC,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEW,QAAAA,KAAK,EAAEV,MAAM,CAACI,OAAhB;AAAyBI,QAAAA,SAAS,EAAE;AAApC,OAAzB,CAAP;;AACD;AACC,aAAOT,KAAP;AARF;AAWA,CAZM","sourcesContent":["import { \n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_ROBOTS_PENDING,\n\tREQUEST_ROBOTS_SUCCESS,\n\tREQUEST_ROBOTS_FAILED \n} from './constants.js';\n\nconst initialStateSearch = {\n\tsearchField: ''\n}\n\nexport const searchRobots = (state = initialStateSearch, action={}) => {\n\tswitch (action.type) {\n\t\tcase CHANGE_SEARCH_FIELD:\n\t\t\treturn Object.assign({}, state, {searchField: action.payload});\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n\nconst initialStateRobots = {\n\t\n}\n\nexport const requestRobots = (state = initialState, action={}) => {\n\tswitch (action.type) {\n\t\tcase REQUEST_ROBOTS_PENDING:\n\t\t\treturn Object.assign({}, state, { isPending: true })\n\t\tcase REQUEST_ROBOTS_SUCCESS:\n\t\t\treturn Object.assign({}, state, { robots: action.payload, isPending: false })\n\t\tcase REQUEST_ROBOTS_FAILED:\n\t\t\treturn\tObject.assign({}, state, { error: action.payload, isPending: false })\n\t\tdefault:\n\t\t\treturn state\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}