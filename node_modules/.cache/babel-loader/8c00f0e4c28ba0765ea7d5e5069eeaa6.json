{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Courses/Web Developer 2.0/robotFriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport RobotList from '../components/RobotList';\nimport { robots } from '../components/robots';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport { setSearchField } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n    this.setState({\n      robots: robots\n    });\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robots => {\n      return robots.name.toLowerCase().includes(this.props.searchField.toLowerCase());\n    });\n    return React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"f1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"RoboFriends\"), React.createElement(SearchBox, {\n      searchChange: this.props.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(RobotList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/tom/Courses/Web Developer 2.0/robotFriends/src/containers/App.js"],"names":["React","Component","connect","RobotList","robots","SearchBox","Scroll","setSearchField","mapStateToProps","state","searchField","searchRobots","requestRobots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","constructor","componentDidMount","fetch","then","response","json","users","setState","render","filteredRobots","filter","name","toLowerCase","includes","props"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD1B;AAENN,IAAAA,MAAM,EAAEK,KAAK,CAACG,aAAN,CAAoBR,MAFtB;AAGNS,IAAAA,SAAS,EAAEJ,KAAK,CAACG,aAAN,CAAoBC,SAHzB;AAINC,IAAAA,KAAK,EAAEL,KAAK,CAACG,aAAN,CAAoBE;AAJrB,GAAP;AAMA,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNC,IAAAA,cAAc,EAAIC,KAAD,IAAWF,QAAQ,CAACT,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAD9B,GAAP;AAGA,CAJD;;AAMA,MAAMC,GAAN,SAAkBpB,SAAlB,CAA2B;AAC1BqB,EAAAA,WAAW,GAAE;AACZ;AACA,SAAKb,KAAL,GAAa;AACZL,MAAAA,MAAM,EAAE;AADI,KAAb;AAGA;;AAEDmB,EAAAA,iBAAiB,GAAE;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACEC,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACzB,MAAAA,MAAM,EAAEwB;AAAT,KAAd,CAFhB;AAGA,SAAKC,QAAL,CAAc;AAACzB,MAAAA,MAAM,EAACA;AAAR,KAAd;AACA;;AAED0B,EAAAA,MAAM,GAAE;AACP,UAAMC,cAAc,GAAG,KAAKtB,KAAL,CAAWL,MAAX,CAAkB4B,MAAlB,CAAyB5B,MAAM,IAAI;AACzD,aAAOA,MAAM,CAAC6B,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC,KAAKC,KAAL,CAAW1B,WAAX,CAAuBwB,WAAvB,EAAnC,CAAP;AACA,KAFsB,CAAvB;AAGA,WACC;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEC,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKE,KAAL,CAAWnB,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAEc,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAHD,CADD;AAUA;;AA7ByB;;AAiC3B,eAAe7B,OAAO,CAACM,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport { connect } from 'react-redux';\nimport RobotList from '../components/RobotList';\nimport {robots} from '../components/robots';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport { setSearchField } from '../actions';\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchField,\n\t\trobots: state.requestRobots.robots,\n\t\tisPending: state.requestRobots.isPending,\n\t\terror: state.requestRobots.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSearchChange : (event) => dispatch(setSearchField(event.target.value))\t\n\t}\n}\n\nclass App extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\trobots: []\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({robots: users}));\n\t\tthis.setState({robots:robots});\n\t}\n\n\trender(){\n\t\tconst filteredRobots = this.state.robots.filter(robots => {\n\t\t\treturn robots.name.toLowerCase().includes(this.props.searchField.toLowerCase());\n\t\t})\n\t\treturn (\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={this.props.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<RobotList robots={filteredRobots}/>\n\t\t\t\t</Scroll>\n\t\t\t\t\n\t\t\t</div>\t\t\n\t\t)\n\t};\n} \n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}